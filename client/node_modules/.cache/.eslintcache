[{"/Users/davidlim/Development/Coding/Phase_5/pokedex/client/src/index.js":"1","/Users/davidlim/Development/Coding/Phase_5/pokedex/client/src/Components/ScoreSlice.js":"2","/Users/davidlim/Development/Coding/Phase_5/pokedex/client/src/App.js":"3","/Users/davidlim/Development/Coding/Phase_5/pokedex/client/src/reportWebVitals.js":"4","/Users/davidlim/Development/Coding/Phase_5/pokedex/client/src/Components/SignUp.js":"5","/Users/davidlim/Development/Coding/Phase_5/pokedex/client/src/Components/Navbar.js":"6","/Users/davidlim/Development/Coding/Phase_5/pokedex/client/src/Components/Home.js":"7","/Users/davidlim/Development/Coding/Phase_5/pokedex/client/src/Components/Scores.js":"8","/Users/davidlim/Development/Coding/Phase_5/pokedex/client/src/Components/Login.js":"9","/Users/davidlim/Development/Coding/Phase_5/pokedex/client/src/Components/Game.js":"10","/Users/davidlim/Development/Coding/Phase_5/pokedex/client/src/Components/Card.js":"11"},{"size":911,"mtime":1684106590516,"results":"12","hashOfConfig":"13"},{"size":469,"mtime":1684109843256,"results":"14","hashOfConfig":"13"},{"size":1191,"mtime":1684364461257,"results":"15","hashOfConfig":"13"},{"size":362,"mtime":1683282399316,"results":"16","hashOfConfig":"13"},{"size":2014,"mtime":1684280445846,"results":"17","hashOfConfig":"13"},{"size":1147,"mtime":1684364406679,"results":"18","hashOfConfig":"13"},{"size":262,"mtime":1684364398558,"results":"19","hashOfConfig":"13"},{"size":626,"mtime":1684364430119,"results":"20","hashOfConfig":"13"},{"size":1656,"mtime":1684194352614,"results":"21","hashOfConfig":"13"},{"size":3481,"mtime":1684364378070,"results":"22","hashOfConfig":"13"},{"size":586,"mtime":1683436357136,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11olnxb",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/davidlim/Development/Coding/Phase_5/pokedex/client/src/index.js",[],[],"/Users/davidlim/Development/Coding/Phase_5/pokedex/client/src/Components/ScoreSlice.js",[],[],"/Users/davidlim/Development/Coding/Phase_5/pokedex/client/src/App.js",["60"],[],"import React, {useState, useEffect} from \"react\";\nimport Home from \"./Components/Home\";\nimport Navbar from \"./Components/Navbar\";\nimport Login from \"./Components/Login\";\nimport SignUp from \"./Components/SignUp\";\nimport Scores from \"./Components/Scores\";\nimport {Switch, Route} from \"react-router-dom\";\nimport './App.css'\n\nfunction App() {\n\n\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    fetch(\"/me\").then((r) => {\n      if (r.ok) {\n        r.json().then((user) => setUser(user));\n      }\n    });\n  }, []);\n\n  function handleLogin(user) {\n    setUser(user);\n  }\n\n\n\n \n  return (\n    \n    <div className=\"App\">\n      <h1> Memory Card Game</h1>\n      <Navbar setUser={setUser}/>\n      {user && <h3>Welcome {user.username}</h3>}\n      <Switch>\n        <Route exact path=\"/\">\n          <Home user={user}/>  \n        </Route>\n        <Route path=\"/signup\">\n          <SignUp />\n        </Route>\n        {/* <Route path=\"/scores\">\n          <Scores />\n        </Route> */}\n        <Route path=\"/login\">\n          <Login onLogin={handleLogin}/>\n        </Route>\n      </Switch>\n      {/* {\n          console.log(user)\n      } */}\n      \n    </div>\n    \n  )\n}\n\nexport default App;","/Users/davidlim/Development/Coding/Phase_5/pokedex/client/src/reportWebVitals.js",[],[],"/Users/davidlim/Development/Coding/Phase_5/pokedex/client/src/Components/SignUp.js",[],[],"/Users/davidlim/Development/Coding/Phase_5/pokedex/client/src/Components/Navbar.js",[],[],"/Users/davidlim/Development/Coding/Phase_5/pokedex/client/src/Components/Home.js",[],[],"/Users/davidlim/Development/Coding/Phase_5/pokedex/client/src/Components/Scores.js",[],[],"/Users/davidlim/Development/Coding/Phase_5/pokedex/client/src/Components/Login.js",["61"],[],"import React, { useState } from \"react\";\n\nfunction Login({ onLogin }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n//   const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n \n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n\n    const errors = \"Invalid username or password\"\n\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then((user) => \n        onLogin(user),\n        // alert(`Welcome ${username}`)\n        )\n      } else {\n        alert(\"Incorrect username or password\")\n      }\n    });\n  }\n\n  \n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      \n        <label htmlFor=\"username\">Username</label>\n        <input\n          type=\"text\"\n          id=\"username\"\n          autoComplete=\"off\"\n          className=\"text\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          required\n        />\n        <br></br>\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n          className=\"text\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n         <br></br>\n        <button type=\"submit\">\n          {isLoading ? \"Loading...\" : \"Login\"}\n        </button>\n     \n    </form>\n  );\n}\n\nexport default Login;","/Users/davidlim/Development/Coding/Phase_5/pokedex/client/src/Components/Game.js",["62","63","64"],[],"import React, {useState, useEffect} from \"react\";\nimport Card from \"./Card\";\nimport { useDispatch } from \"react-redux\";\nimport { updateScores } from \"./ScoreSlice\";\n\n\nfunction Game({user_id}) {\n\n  const [cards, setCards] = useState([])\n  const [turns, setTurns] = useState(0)\n  const [choiceOne, setChoiceOne] = useState(null)\n  const [choiceTwo, setChoiceTwo] = useState(null)\n  const [disabled, setDisabled] = useState(false)\n  const [gameWon, setGameWon] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const cardImg = [\n    {\"src\": \"/img/charizard.png\", matched: false},\n    {\"src\": \"/img/eevee.png\", matched: false},\n    {\"src\": \"/img/gengar.png\", matched: false},\n    {\"src\": \"/img/jigglypuff.png\", matched: false},\n    {\"src\": \"/img/pikachu.png\", matched: false},\n    {\"src\": \"/img/snorlax.png\", matched: false}\n  ]\n\n  const dispatch = useDispatch();\n\n\n  function shuffleCards () {\n    const shuffleCards = [...cardImg, ...cardImg]\n      .sort(() => Math.random() - 0.5)\n      .map((card) => ({...card, id: Math.random()}))\n\n    setCards(shuffleCards)\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setTurns(0)\n    setGameWon(false)\n  }\n\n  function handleChoice(card) {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n  }\n\n  useEffect(() => {\n    \n    if (choiceOne && choiceTwo) {\n      setDisabled(true)\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src) {\n              return {...card, matched: true}\n            } else {\n              return card\n            }\n          })\n        })\n        resetTurn()\n      } else {\n        \n        setTimeout(() => resetTurn(), 2000)\n      }\n    }\n  }, [choiceOne, choiceTwo])\n  \n  // console.log(cards)\n\n  function resetTurn () {\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setTurns(prevTurns => prevTurns + 1)\n    setDisabled(false)\n  }\n\n  useEffect(() => {\n    shuffleCards()\n  }, [])\n\n  useEffect(() => {\n    if (cards.length > 0 && cards.every((card) => card.matched === true)) {\n      setGameWon(true);\n      dispatch(updateScores(turns));\n    //   saveScore()\n    }\n  }, [cards, dispatch, turns]);\n\n//   function saveScore() {\n//     setScore(turns)\n//       fetch('/scores', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ score, user_id}),\n//       })\n//         .then((response) => response.json())\n        // .then((newScore) => {\n        //   setScore([...score, newScore]);\n        // })\n//   }\n \n  return (\n    \n    <div className=\"App\">\n      \n      {gameWon ? (\n        <div className=\"congrats\">\n          <h2>Congratulations! You won the game!</h2>\n          <button onClick={shuffleCards} className=\"button\">\n            Play Again\n          </button>\n        </div>\n      ) : (\n        <div>\n          <button onClick={shuffleCards} className=\"button\">\n            New Game\n          </button>\n          <p>Turns: {turns}</p>\n          <div className=\"card-grid\">\n            {cards.map((card) => (\n              <Card\n                key={card.id}\n                card={card}\n                handleChoice={handleChoice}\n                flipped={card === choiceOne || card === choiceTwo || card.matched}\n                disabled={disabled}\n              />\n            ))}\n          </div>\n        </div>\n      )}\n      </div>\n      \n\n    \n  )\n}\n\nexport default Game;","/Users/davidlim/Development/Coding/Phase_5/pokedex/client/src/Components/Card.js",[],[],{"ruleId":"65","severity":1,"message":"66","line":6,"column":8,"nodeType":"67","messageId":"68","endLine":6,"endColumn":14},{"ruleId":"65","severity":1,"message":"69","line":15,"column":11,"nodeType":"67","messageId":"68","endLine":15,"endColumn":17},{"ruleId":"65","severity":1,"message":"70","line":15,"column":10,"nodeType":"67","messageId":"68","endLine":15,"endColumn":15},{"ruleId":"65","severity":1,"message":"71","line":15,"column":17,"nodeType":"67","messageId":"68","endLine":15,"endColumn":25},{"ruleId":"72","severity":1,"message":"73","line":78,"column":6,"nodeType":"74","endLine":78,"endColumn":8,"suggestions":"75"},"no-unused-vars","'Scores' is defined but never used.","Identifier","unusedVar","'errors' is assigned a value but never used.","'score' is assigned a value but never used.","'setScore' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'shuffleCards'. Either include it or remove the dependency array.","ArrayExpression",["76"],{"desc":"77","fix":"78"},"Update the dependencies array to be: [shuffleCards]",{"range":"79","text":"80"},[1978,1980],"[shuffleCards]"]